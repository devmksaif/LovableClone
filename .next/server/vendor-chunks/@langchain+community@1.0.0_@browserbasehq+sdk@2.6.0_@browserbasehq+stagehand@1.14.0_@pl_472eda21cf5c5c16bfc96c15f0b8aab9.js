"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9";
exports.ids = ["vendor-chunks/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/_virtual/rolldown_runtime.js":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/_virtual/rolldown_runtime.js ***!
  \*************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __commonJS: () => (/* binding */ __commonJS),\n/* harmony export */   __export: () => (/* binding */ __export),\n/* harmony export */   __reExport: () => (/* binding */ __reExport),\n/* harmony export */   __require: () => (/* binding */ __require),\n/* harmony export */   __toESM: () => (/* binding */ __toESM)\n/* harmony export */ });\n/* harmony import */ var node_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:module */ \"node:module\");\n\n\n//#region rolldown:runtime\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function() {\n\treturn mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n\tfor (var name in all) __defProp(target, name, {\n\t\tget: all[name],\n\t\tenumerable: true\n\t});\n};\nvar __copyProps = (to, from, except, desc) => {\n\tif (from && typeof from === \"object\" || typeof from === \"function\") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {\n\t\tkey = keys[i];\n\t\tif (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n\t\t\tget: ((k) => from[k]).bind(null, key),\n\t\t\tenumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n\t\t});\n\t}\n\treturn to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n\tvalue: mod,\n\tenumerable: true\n}) : target, mod));\nvar __require = /* @__PURE__ */ (0,node_module__WEBPACK_IMPORTED_MODULE_0__.createRequire)(\"file:///Users/Apple/Desktop/NextLovable/node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/_virtual/rolldown_runtime.js\");\n\n//#endregion\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitjb21tdW5pdHlAMS4wLjBfQGJyb3dzZXJiYXNlaHErc2RrQDIuNi4wX0Bicm93c2VyYmFzZWhxK3N0YWdlaGFuZEAxLjE0LjBfQHBsXzQ3MmVkYTIxY2Y1YzVjMTZiZmM5NmMxNWYwYjhhYWI5L25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L192aXJ0dWFsL3JvbGxkb3duX3J1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTRDOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELGFBQWE7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsMklBQTJJLE9BQU87QUFDbEo7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBLENBQUM7QUFDRCxnQ0FBZ0MsMERBQWEsQ0FBQyx5UEFBZTs7QUFFN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVucm91dGVyLWxhbmdncmFwaC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2NvbW11bml0eUAxLjAuMF9AYnJvd3NlcmJhc2VocStzZGtAMi42LjBfQGJyb3dzZXJiYXNlaHErc3RhZ2VoYW5kQDEuMTQuMF9AcGxfNDcyZWRhMjFjZjVjNWMxNmJmYzk2YzE1ZjBiOGFhYjkvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29tbXVuaXR5L2Rpc3QvX3ZpcnR1YWwvcm9sbGRvd25fcnVudGltZS5qcz8xNDIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVJlcXVpcmUgfSBmcm9tIFwibm9kZTptb2R1bGVcIjtcblxuLy8jcmVnaW9uIHJvbGxkb3duOnJ1bnRpbWVcbnZhciBfX2NyZWF0ZSA9IE9iamVjdC5jcmVhdGU7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19nZXRQcm90b09mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19jb21tb25KUyA9IChjYiwgbW9kKSA9PiBmdW5jdGlvbigpIHtcblx0cmV0dXJuIG1vZCB8fCAoMCwgY2JbX19nZXRPd25Qcm9wTmFtZXMoY2IpWzBdXSkoKG1vZCA9IHsgZXhwb3J0czoge30gfSkuZXhwb3J0cywgbW9kKSwgbW9kLmV4cG9ydHM7XG59O1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG5cdGZvciAodmFyIG5hbWUgaW4gYWxsKSBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7XG5cdFx0Z2V0OiBhbGxbbmFtZV0sXG5cdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHR9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuXHRpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKHZhciBrZXlzID0gX19nZXRPd25Qcm9wTmFtZXMoZnJvbSksIGkgPSAwLCBuID0ga2V5cy5sZW5ndGgsIGtleTsgaSA8IG47IGkrKykge1xuXHRcdGtleSA9IGtleXNbaV07XG5cdFx0aWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdCkgX19kZWZQcm9wKHRvLCBrZXksIHtcblx0XHRcdGdldDogKChrKSA9PiBmcm9tW2tdKS5iaW5kKG51bGwsIGtleSksXG5cdFx0XHRlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZVxuXHRcdH0pO1xuXHR9XG5cdHJldHVybiB0bztcbn07XG52YXIgX19yZUV4cG9ydCA9ICh0YXJnZXQsIG1vZCwgc2Vjb25kVGFyZ2V0KSA9PiAoX19jb3B5UHJvcHModGFyZ2V0LCBtb2QsIFwiZGVmYXVsdFwiKSwgc2Vjb25kVGFyZ2V0ICYmIF9fY29weVByb3BzKHNlY29uZFRhcmdldCwgbW9kLCBcImRlZmF1bHRcIikpO1xudmFyIF9fdG9FU00gPSAobW9kLCBpc05vZGVNb2RlLCB0YXJnZXQpID0+ICh0YXJnZXQgPSBtb2QgIT0gbnVsbCA/IF9fY3JlYXRlKF9fZ2V0UHJvdG9PZihtb2QpKSA6IHt9LCBfX2NvcHlQcm9wcyhpc05vZGVNb2RlIHx8ICFtb2QgfHwgIW1vZC5fX2VzTW9kdWxlID8gX19kZWZQcm9wKHRhcmdldCwgXCJkZWZhdWx0XCIsIHtcblx0dmFsdWU6IG1vZCxcblx0ZW51bWVyYWJsZTogdHJ1ZVxufSkgOiB0YXJnZXQsIG1vZCkpO1xudmFyIF9fcmVxdWlyZSA9IC8qIEBfX1BVUkVfXyAqLyBjcmVhdGVSZXF1aXJlKGltcG9ydC5tZXRhLnVybCk7XG5cbi8vI2VuZHJlZ2lvblxuZXhwb3J0IHsgX19jb21tb25KUywgX19leHBvcnQsIF9fcmVFeHBvcnQsIF9fcmVxdWlyZSwgX190b0VTTSB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/_virtual/rolldown_runtime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/vectorstores/chroma.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/vectorstores/chroma.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chroma: () => (/* binding */ Chroma),\n/* harmony export */   chroma_exports: () => (/* binding */ chroma_exports)\n/* harmony export */ });\n/* harmony import */ var _virtual_rolldown_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_virtual/rolldown_runtime.js */ \"(rsc)/./node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/_virtual/rolldown_runtime.js\");\n/* harmony import */ var _langchain_core_documents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/documents */ \"(rsc)/./node_modules/.pnpm/@langchain+core@1.0.1_openai@6.7.0_ws@8.18.3_zod@3.25.76_/node_modules/@langchain/core/dist/documents/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-node/v1.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _langchain_core_vectorstores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/vectorstores */ \"(rsc)/./node_modules/.pnpm/@langchain+core@1.0.1_openai@6.7.0_ws@8.18.3_zod@3.25.76_/node_modules/@langchain/core/dist/vectorstores.js\");\n\n\n\n\n\n//#region src/vectorstores/chroma.ts\nvar chroma_exports = {};\n(0,_virtual_rolldown_runtime_js__WEBPACK_IMPORTED_MODULE_0__.__export)(chroma_exports, { Chroma: () => Chroma });\n/**\n* Chroma vector store integration.\n*\n* Setup:\n* Install `@langchain/community` and `chromadb`.\n*\n* ```bash\n* npm install @langchain/community chromadb\n* ```\n*\n* ## [Constructor args](https://api.js.langchain.com/classes/langchain_community_vectorstores_chroma.Chroma.html#constructor)\n*\n* <details open>\n* <summary><strong>Instantiate</strong></summary>\n*\n* ```typescript\n* import { Chroma } from '@langchain/community/vectorstores/chroma';\n* // Or other embeddings\n* import { OpenAIEmbeddings } from '@langchain/openai';\n*\n* const embeddings = new OpenAIEmbeddings({\n*   model: \"text-embedding-3-small\",\n* })\n*\n* const vectorStore = new Chroma(\n*   embeddings,\n*   {\n*     collectionName: \"foo\",\n*     host: \"localhost\",\n*   }\n* );\n* ```\n* </details>\n*\n* <br />\n*\n* <details>\n* <summary><strong>Add documents</strong></summary>\n*\n* ```typescript\n* import type { Document } from '@langchain/core/documents';\n*\n* const document1 = { pageContent: \"foo\", metadata: { baz: \"bar\" } };\n* const document2 = { pageContent: \"thud\", metadata: { bar: \"baz\" } };\n* const document3 = { pageContent: \"I will be deleted :(\", metadata: {} };\n*\n* const documents: Document[] = [document1, document2, document3];\n* const ids = [\"1\", \"2\", \"3\"];\n* await vectorStore.addDocuments(documents, { ids });\n* ```\n* </details>\n*\n* <br />\n*\n* <details>\n* <summary><strong>Delete documents</strong></summary>\n*\n* ```typescript\n* await vectorStore.delete({ ids: [\"3\"] });\n* ```\n* </details>\n*\n* <br />\n*\n* <details>\n* <summary><strong>Similarity search</strong></summary>\n*\n* ```typescript\n* const results = await vectorStore.similaritySearch(\"thud\", 1);\n* for (const doc of results) {\n*   console.log(`* ${doc.pageContent} [${JSON.stringify(doc.metadata, null)}]`);\n* }\n* // Output: * thud [{\"baz\":\"bar\"}]\n* ```\n* </details>\n*\n* <br />\n*\n*\n* <details>\n* <summary><strong>Similarity search with filter</strong></summary>\n*\n* ```typescript\n* const resultsWithFilter = await vectorStore.similaritySearch(\"thud\", 1, { baz: \"bar\" });\n*\n* for (const doc of resultsWithFilter) {\n*   console.log(`* ${doc.pageContent} [${JSON.stringify(doc.metadata, null)}]`);\n* }\n* // Output: * foo [{\"baz\":\"bar\"}]\n* ```\n* </details>\n*\n* <br />\n*\n*\n* <details>\n* <summary><strong>Similarity search with score</strong></summary>\n*\n* ```typescript\n* const resultsWithScore = await vectorStore.similaritySearchWithScore(\"qux\", 1);\n* for (const [doc, score] of resultsWithScore) {\n*   console.log(`* [SIM=${score.toFixed(6)}] ${doc.pageContent} [${JSON.stringify(doc.metadata, null)}]`);\n* }\n* // Output: * [SIM=0.000000] qux [{\"bar\":\"baz\",\"baz\":\"bar\"}]\n* ```\n* </details>\n*\n* <br />\n*\n* <details>\n* <summary><strong>As a retriever</strong></summary>\n*\n* ```typescript\n* const retriever = vectorStore.asRetriever({\n*   searchType: \"mmr\", // Leave blank for standard similarity search\n*   k: 1,\n* });\n* const resultAsRetriever = await retriever.invoke(\"thud\");\n* console.log(resultAsRetriever);\n*\n* // Output: [Document({ metadata: { \"baz\":\"bar\" }, pageContent: \"thud\" })]\n* ```\n* </details>\n*\n* <br />\n*/\nvar Chroma = class Chroma extends _langchain_core_vectorstores__WEBPACK_IMPORTED_MODULE_2__.VectorStore {\n\tindex;\n\tcollection;\n\tcollectionName;\n\tcollectionMetadata;\n\tnumDimensions;\n\tclientParams;\n\turl;\n\tfilter;\n\t_vectorstoreType() {\n\t\treturn \"chroma\";\n\t}\n\tconstructor(embeddings, args) {\n\t\tsuper(embeddings, args);\n\t\tthis.numDimensions = args.numDimensions;\n\t\tthis.embeddings = embeddings;\n\t\tthis.collectionName = ensureCollectionName(args.collectionName);\n\t\tthis.collectionMetadata = args.collectionMetadata;\n\t\tthis.clientParams = args.clientParams || {};\n\t\tif (\"index\" in args) this.index = args.index;\n\t\telse if (\"url\" in args) this.url = args.url || \"http://localhost:8000\";\n\t\tif (args.chromaCloudAPIKey) this.clientParams.headers = {\n\t\t\t...this.clientParams?.headers || {},\n\t\t\t\"x-chroma-token\": args.chromaCloudAPIKey\n\t\t};\n\t\tthis.filter = args.filter;\n\t}\n\t/**\n\t* Adds documents to the Chroma database. The documents are first\n\t* converted to vectors using the `embeddings` instance, and then added to\n\t* the database.\n\t* @param documents An array of `Document` instances to be added to the database.\n\t* @param options Optional. An object containing an array of `ids` for the documents.\n\t* @returns A promise that resolves when the documents have been added to the database.\n\t*/\n\tasync addDocuments(documents, options) {\n\t\tconst texts = documents.map(({ pageContent }) => pageContent);\n\t\treturn this.addVectors(await this.embeddings.embedDocuments(texts), documents, options);\n\t}\n\t/**\n\t* Ensures that a collection exists in the Chroma database. If the\n\t* collection does not exist, it is created.\n\t* @returns A promise that resolves with the `Collection` instance.\n\t*/\n\tasync ensureCollection() {\n\t\tif (!this.collection) {\n\t\t\tif (!this.index) this.index = new (await (Chroma.imports())).ChromaClient({\n\t\t\t\tpath: this.url,\n\t\t\t\t...this.clientParams ?? {}\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tthis.collection = await this.index.getOrCreateCollection({\n\t\t\t\t\tname: this.collectionName,\n\t\t\t\t\tembeddingFunction: null,\n\t\t\t\t\t...this.collectionMetadata && { metadata: this.collectionMetadata }\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(`Chroma getOrCreateCollection error: ${err}`);\n\t\t\t}\n\t\t}\n\t\treturn this.collection;\n\t}\n\t/**\n\t* Adds vectors to the Chroma database. The vectors are associated with\n\t* the provided documents.\n\t* @param vectors An array of vectors to be added to the database.\n\t* @param documents An array of `Document` instances associated with the vectors.\n\t* @param options Optional. An object containing an array of `ids` for the vectors.\n\t* @returns A promise that resolves with an array of document IDs when the vectors have been added to the database.\n\t*/\n\tasync addVectors(vectors, documents, options) {\n\t\tif (vectors.length === 0) return [];\n\t\tif (this.numDimensions === void 0) this.numDimensions = vectors[0].length;\n\t\tif (vectors.length !== documents.length) throw new Error(`Vectors and metadatas must have the same length`);\n\t\tif (vectors[0].length !== this.numDimensions) throw new Error(`Vectors must have the same length as the number of dimensions (${this.numDimensions})`);\n\t\tconst documentIds = options?.ids ?? Array.from({ length: vectors.length }, () => uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"]());\n\t\tconst collection = await this.ensureCollection();\n\t\tconst mappedMetadatas = documents.map(({ metadata }) => {\n\t\t\tlet locFrom;\n\t\t\tlet locTo;\n\t\t\tif (metadata?.loc) {\n\t\t\t\tif (metadata.loc.lines?.from !== void 0) locFrom = metadata.loc.lines.from;\n\t\t\t\tif (metadata.loc.lines?.to !== void 0) locTo = metadata.loc.lines.to;\n\t\t\t}\n\t\t\tconst newMetadata = {\n\t\t\t\t...metadata,\n\t\t\t\t...locFrom !== void 0 && { locFrom },\n\t\t\t\t...locTo !== void 0 && { locTo }\n\t\t\t};\n\t\t\tif (newMetadata.loc) delete newMetadata.loc;\n\t\t\treturn newMetadata;\n\t\t});\n\t\tawait collection.upsert({\n\t\t\tids: documentIds,\n\t\t\tembeddings: vectors,\n\t\t\tmetadatas: mappedMetadatas,\n\t\t\tdocuments: documents.map(({ pageContent }) => pageContent)\n\t\t});\n\t\treturn documentIds;\n\t}\n\t/**\n\t* Deletes documents from the Chroma database. The documents to be deleted\n\t* can be specified by providing an array of `ids` or a `filter` object.\n\t* @param params An object containing either an array of `ids` of the documents to be deleted or a `filter` object to specify the documents to be deleted.\n\t* @returns A promise that resolves when the specified documents have been deleted from the database.\n\t*/\n\tasync delete(params) {\n\t\tconst collection = await this.ensureCollection();\n\t\tif (Array.isArray(params.ids)) await collection.delete({ ids: params.ids });\n\t\telse if (params.filter) await collection.delete({ where: { ...params.filter } });\n\t\telse throw new Error(`You must provide one of \"ids or \"filter\".`);\n\t}\n\t/**\n\t* Searches for vectors in the Chroma database that are similar to the\n\t* provided query vector. The search can be filtered using the provided\n\t* `filter` object or the `filter` property of the `Chroma` instance.\n\t* @param query The query vector.\n\t* @param k The number of similar vectors to return.\n\t* @param filter Optional. A `filter` object to filter the search results.\n\t* @returns A promise that resolves with an array of tuples, each containing a `Document` instance and a similarity score.\n\t*/\n\tasync similaritySearchVectorWithScore(query, k, filter) {\n\t\tif (filter && this.filter) throw new Error(\"cannot provide both `filter` and `this.filter`\");\n\t\tconst _filter = filter ?? this.filter;\n\t\tconst where = _filter === void 0 ? void 0 : { ..._filter };\n\t\tconst collection = await this.ensureCollection();\n\t\tconst result = await collection.query({\n\t\t\tqueryEmbeddings: [query],\n\t\t\tnResults: k,\n\t\t\twhere\n\t\t});\n\t\tconst { ids, distances, documents, metadatas } = result;\n\t\tif (!ids || !distances || !documents || !metadatas) return [];\n\t\tconst [firstIds] = ids;\n\t\tconst [firstDistances] = distances;\n\t\tconst [firstDocuments] = documents;\n\t\tconst [firstMetadatas] = metadatas;\n\t\tif (firstDistances.some((item) => item === null)) return [];\n\t\tconst cleanDistances = firstDistances.filter((item) => item !== null);\n\t\tconst results = [];\n\t\tfor (let i = 0; i < firstIds.length; i += 1) {\n\t\t\tlet metadata = firstMetadatas?.[i] ?? {};\n\t\t\tif (metadata.locFrom && metadata.locTo) {\n\t\t\t\tmetadata = {\n\t\t\t\t\t...metadata,\n\t\t\t\t\tloc: { lines: {\n\t\t\t\t\t\tfrom: metadata.locFrom,\n\t\t\t\t\t\tto: metadata.locTo\n\t\t\t\t\t} }\n\t\t\t\t};\n\t\t\t\tdelete metadata.locFrom;\n\t\t\t\tdelete metadata.locTo;\n\t\t\t}\n\t\t\tresults.push([new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_1__.Document({\n\t\t\t\tpageContent: firstDocuments?.[i] ?? \"\",\n\t\t\t\tmetadata,\n\t\t\t\tid: firstIds[i]\n\t\t\t}), cleanDistances[i]]);\n\t\t}\n\t\treturn results;\n\t}\n\t/**\n\t* Creates a new `Chroma` instance from an array of text strings. The text\n\t* strings are converted to `Document` instances and added to the Chroma\n\t* database.\n\t* @param texts An array of text strings.\n\t* @param metadatas An array of metadata objects or a single metadata object. If an array is provided, it must have the same length as the `texts` array.\n\t* @param embeddings An `Embeddings` instance used to generate embeddings for the documents.\n\t* @param dbConfig A `ChromaLibArgs` object containing the configuration for the Chroma database.\n\t* @returns A promise that resolves with a new `Chroma` instance.\n\t*/\n\tstatic async fromTexts(texts, metadatas, embeddings, dbConfig) {\n\t\tconst docs = [];\n\t\tfor (let i = 0; i < texts.length; i += 1) {\n\t\t\tconst metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n\t\t\tconst newDoc = new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_1__.Document({\n\t\t\t\tpageContent: texts[i],\n\t\t\t\tmetadata\n\t\t\t});\n\t\t\tdocs.push(newDoc);\n\t\t}\n\t\treturn this.fromDocuments(docs, embeddings, dbConfig);\n\t}\n\t/**\n\t* Creates a new `Chroma` instance from an array of `Document` instances.\n\t* The documents are added to the Chroma database.\n\t* @param docs An array of `Document` instances.\n\t* @param embeddings An `Embeddings` instance used to generate embeddings for the documents.\n\t* @param dbConfig A `ChromaLibArgs` object containing the configuration for the Chroma database.\n\t* @returns A promise that resolves with a new `Chroma` instance.\n\t*/\n\tstatic async fromDocuments(docs, embeddings, dbConfig) {\n\t\tconst instance = new this(embeddings, dbConfig);\n\t\tawait instance.addDocuments(docs);\n\t\treturn instance;\n\t}\n\t/**\n\t* Creates a new `Chroma` instance from an existing collection in the\n\t* Chroma database.\n\t* @param embeddings An `Embeddings` instance used to generate embeddings for the documents.\n\t* @param dbConfig A `ChromaLibArgs` object containing the configuration for the Chroma database.\n\t* @returns A promise that resolves with a new `Chroma` instance.\n\t*/\n\tstatic async fromExistingCollection(embeddings, dbConfig) {\n\t\tconst instance = new this(embeddings, dbConfig);\n\t\tawait instance.ensureCollection();\n\t\treturn instance;\n\t}\n\t/** @ignore */\n\tstatic async imports() {\n\t\ttry {\n\t\t\tconst { ChromaClient } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/chromadb@3.0.17\").then(__webpack_require__.bind(__webpack_require__, /*! chromadb */ \"(rsc)/./node_modules/.pnpm/chromadb@3.0.17/node_modules/chromadb/dist/chromadb.mjs\"));\n\t\t\treturn { ChromaClient };\n\t\t} catch {\n\t\t\tthrow new Error(\"Please install chromadb as a dependency with, e.g. `npm install -S chromadb`\");\n\t\t}\n\t}\n};\n/**\n* Generates a unique collection name if none is provided.\n*/\nfunction ensureCollectionName(collectionName) {\n\tif (!collectionName) return `langchain-${uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"]()}`;\n\treturn collectionName;\n}\n\n//#endregion\n\n//# sourceMappingURL=chroma.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+community@1.0.0_@browserbasehq+sdk@2.6.0_@browserbasehq+stagehand@1.14.0_@pl_472eda21cf5c5c16bfc96c15f0b8aab9/node_modules/@langchain/community/dist/vectorstores/chroma.js\n");

/***/ })

};
;